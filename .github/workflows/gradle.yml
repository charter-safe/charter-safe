name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: app-release-files
  AWS_CODE_DEPLOY_APPLICATION: charter
  AWS_CODE_DEPLOY_GROUP: cicd-charter

jobs:
  build-with-gradle:
    runs-on: ubuntu-22.04
    # env:
    #   working-directory: ./charter_safe_Be
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
        # path: ./charter_safe_Be
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        gradle-version: 8.8
        arguments: build
    - name: gradlew에 실행 권한 부여
      run: chmod +x ./gradlew
      working-directory: ./Charter_safe_Be
      # working-directory: ./charter_safe_Be
    - name: 프로젝트 빌드
      run: ./gradlew clean build -x test
    - name: AWS credential 설정
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
    - name: S3에 업로드
      run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .
    - name: EC2에 배포
      run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip
